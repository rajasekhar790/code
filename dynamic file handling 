from sanic import Blueprint, response
import json
import psycopg2

table_blueprint = Blueprint('table_blueprint')

# Database connection parameters
db_params = {
    "dbname": "your_database",
    "user": "your_username",
    "password": "your_password",
    "host": "your_host",
    "port": "your_port"
}

@table_blueprint.route("/upload_json", methods=["POST"])
async def upload_json(request):
    if 'file' not in request.files:
        return response.json({"status": "error", "message": "No file part in the request"}, status=400)

    file = request.files.get('file')
    data = json.loads(file.body)
    
    table_name = data["table_name"]
    columns = data["columns"]

    column_definitions = ", ".join([f"{col['name']} {col['type']}" for col in columns])

    create_table_query = f"CREATE TABLE IF NOT EXISTS {table_name} ({column_definitions});"

    try:
        # Connect to the database
        connection = psycopg2.connect(**db_params)
        cursor = connection.cursor()

        # Execute the query
        cursor.execute(create_table_query)
        connection.commit()

        cursor.close()
        connection.close()

        return response.json({"status": "success", "message": f"Table {table_name} created successfully"})
    except Exception as e:
        return response.json({"status": "error", "message": str(e)}, status=500)